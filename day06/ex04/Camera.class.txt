<?php

require_once '../ex01/Vertex.class.php';
require_once '../ex02/Vector.class.php';
require_once '../ex03/Matrix.class.php';

class Matrix
{
	static $verbose = false;

	private $_origin;
	private $_orientation;
	private $_width;
	private $_height;
	private $_ratio;
	private $_fov;
	private $_near;
	private $_far;
	private $_tT;
	private $_tR;
	private $_proj;

	public function __construct($param)
	{
		$this->_origin = param['origin'];
		$_tT = new Matrix(new array('preset' => TRANSLATION, 'vtc' => $this->_origin->opposite()));
		// inverse this

		if (self::$verbose)
		{
			doo stuff;
		}
	}

	function __destruct()
	{
		if (self::verbose)
			doo stuff;
			
	}

	function __toString()
	{
		
	}
	
	public static function doc()
	{
		echo PHP_EOL;
		$doctxt = file("Camera.doc.txt");
		foreach ($doctxt as $line)
			echo $line;
		echo PHP_EOL;
	}

	public function watchVertex($worldVertex)
	{

	}

	public function
}
?>
